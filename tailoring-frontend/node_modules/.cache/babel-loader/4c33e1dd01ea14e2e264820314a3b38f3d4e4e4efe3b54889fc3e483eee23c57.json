{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,useLocation}from\"react-router-dom\";import ChatPanel from\"../components/ChatPanel\";// This ChatPage supports both full-screen direct chat (with params) and fallback for old /chat route with query string params.\nimport{jsx as _jsx}from\"react/jsx-runtime\";export default function ChatPage(_ref){var _profile$seller,_profile$seller2;let{profile}=_ref;const params=useParams();const location=useLocation();// Try to extract IDs/roles from URL params (preferred) or fallback to query params\nlet userRole,userId,otherId,receiverName;if(params.userRole&&params.userId&&params.otherId){userRole=Number(params.userRole);userId=Number(params.userId);otherId=Number(params.otherId);}else{// Fallback: parse from query string, e.g. /chat?userRole=1&userId=12&otherId=44\nconst qs=new URLSearchParams(location.search);userRole=Number(qs.get(\"userRole\")||(profile===null||profile===void 0?void 0:profile.role_id));userId=Number(qs.get(\"userId\")||(profile===null||profile===void 0?void 0:profile.id));otherId=Number(qs.get(\"otherId\"));}// Set sender/receiver roles for ChatPanel\nlet userRoleId=userRole;let otherRoleId=userRole===2?1:2;// 1: customer, 2: seller\n// Try to determine receiver name\nif(otherRoleId===2&&profile!==null&&profile!==void 0&&(_profile$seller=profile.seller)!==null&&_profile$seller!==void 0&&_profile$seller.shop_name){receiverName=profile.seller.shop_name;}else{receiverName=\"\";// You may fetch receiver name if needed\n}// Don't render ChatPanel unless both IDs are present\nif(!userId||!otherId||!userRoleId||!otherRoleId){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen text-red-600\",children:\"Unable to load chat: missing user information.\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"flex min-h-screen items-center justify-center bg-gradient-to-br from-blue-50 via-green-50 to-blue-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full max-w-2xl\",children:/*#__PURE__*/_jsx(ChatPanel,{userId:userId,otherId:otherId,userRoleId:userRoleId,otherRoleId:otherRoleId,senderName:(profile===null||profile===void 0?void 0:(_profile$seller2=profile.seller)===null||_profile$seller2===void 0?void 0:_profile$seller2.shop_name)||(profile===null||profile===void 0?void 0:profile.name),receiverName:receiverName})})});}","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","ChatPanel","jsx","_jsx","ChatPage","_ref","_profile$seller","_profile$seller2","profile","params","location","userRole","userId","otherId","receiverName","Number","qs","URLSearchParams","search","get","role_id","id","userRoleId","otherRoleId","seller","shop_name","className","children","senderName","name"],"sources":["C:/Users/admin/SheStich/tailoring-frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport ChatPanel from \"../components/ChatPanel\";\r\n\r\n// This ChatPage supports both full-screen direct chat (with params) and fallback for old /chat route with query string params.\r\nexport default function ChatPage({ profile }) {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n\r\n  // Try to extract IDs/roles from URL params (preferred) or fallback to query params\r\n  let userRole, userId, otherId, receiverName;\r\n\r\n  if (params.userRole && params.userId && params.otherId) {\r\n    userRole = Number(params.userRole);\r\n    userId = Number(params.userId);\r\n    otherId = Number(params.otherId);\r\n  } else {\r\n    // Fallback: parse from query string, e.g. /chat?userRole=1&userId=12&otherId=44\r\n    const qs = new URLSearchParams(location.search);\r\n    userRole = Number(qs.get(\"userRole\") || profile?.role_id);\r\n    userId = Number(qs.get(\"userId\") || profile?.id);\r\n    otherId = Number(qs.get(\"otherId\"));\r\n  }\r\n\r\n  // Set sender/receiver roles for ChatPanel\r\n  let userRoleId = userRole;\r\n  let otherRoleId = userRole === 2 ? 1 : 2; // 1: customer, 2: seller\r\n\r\n  // Try to determine receiver name\r\n  if (otherRoleId === 2 && profile?.seller?.shop_name) {\r\n    receiverName = profile.seller.shop_name;\r\n  } else {\r\n    receiverName = \"\"; // You may fetch receiver name if needed\r\n  }\r\n\r\n  // Don't render ChatPanel unless both IDs are present\r\n  if (!userId || !otherId || !userRoleId || !otherRoleId) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen text-red-600\">\r\n        Unable to load chat: missing user information.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-blue-50 via-green-50 to-blue-100\">\r\n      <div className=\"w-full max-w-2xl\">\r\n        <ChatPanel\r\n          userId={userId}\r\n          otherId={otherId}\r\n          userRoleId={userRoleId}\r\n          otherRoleId={otherRoleId}\r\n          senderName={profile?.seller?.shop_name || profile?.name}\r\n          receiverName={receiverName}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAE/C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,cAAe,SAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAc,KAAAC,eAAA,CAAAC,gBAAA,IAAb,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CAC1C,KAAM,CAAAI,MAAM,CAAGV,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B;AACA,GAAI,CAAAW,QAAQ,CAAEC,MAAM,CAAEC,OAAO,CAAEC,YAAY,CAE3C,GAAIL,MAAM,CAACE,QAAQ,EAAIF,MAAM,CAACG,MAAM,EAAIH,MAAM,CAACI,OAAO,CAAE,CACtDF,QAAQ,CAAGI,MAAM,CAACN,MAAM,CAACE,QAAQ,CAAC,CAClCC,MAAM,CAAGG,MAAM,CAACN,MAAM,CAACG,MAAM,CAAC,CAC9BC,OAAO,CAAGE,MAAM,CAACN,MAAM,CAACI,OAAO,CAAC,CAClC,CAAC,IAAM,CACL;AACA,KAAM,CAAAG,EAAE,CAAG,GAAI,CAAAC,eAAe,CAACP,QAAQ,CAACQ,MAAM,CAAC,CAC/CP,QAAQ,CAAGI,MAAM,CAACC,EAAE,CAACG,GAAG,CAAC,UAAU,CAAC,GAAIX,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEY,OAAO,EAAC,CACzDR,MAAM,CAAGG,MAAM,CAACC,EAAE,CAACG,GAAG,CAAC,QAAQ,CAAC,GAAIX,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEa,EAAE,EAAC,CAChDR,OAAO,CAAGE,MAAM,CAACC,EAAE,CAACG,GAAG,CAAC,SAAS,CAAC,CAAC,CACrC,CAEA;AACA,GAAI,CAAAG,UAAU,CAAGX,QAAQ,CACzB,GAAI,CAAAY,WAAW,CAAGZ,QAAQ,GAAK,CAAC,CAAG,CAAC,CAAG,CAAC,CAAE;AAE1C;AACA,GAAIY,WAAW,GAAK,CAAC,EAAIf,OAAO,SAAPA,OAAO,YAAAF,eAAA,CAAPE,OAAO,CAAEgB,MAAM,UAAAlB,eAAA,WAAfA,eAAA,CAAiBmB,SAAS,CAAE,CACnDX,YAAY,CAAGN,OAAO,CAACgB,MAAM,CAACC,SAAS,CACzC,CAAC,IAAM,CACLX,YAAY,CAAG,EAAE,CAAE;AACrB,CAEA;AACA,GAAI,CAACF,MAAM,EAAI,CAACC,OAAO,EAAI,CAACS,UAAU,EAAI,CAACC,WAAW,CAAE,CACtD,mBACEpB,IAAA,QAAKuB,SAAS,CAAC,4DAA4D,CAAAC,QAAA,CAAC,gDAE5E,CAAK,CAAC,CAEV,CAEA,mBACExB,IAAA,QAAKuB,SAAS,CAAC,uGAAuG,CAAAC,QAAA,cACpHxB,IAAA,QAAKuB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BxB,IAAA,CAACF,SAAS,EACRW,MAAM,CAAEA,MAAO,CACfC,OAAO,CAAEA,OAAQ,CACjBS,UAAU,CAAEA,UAAW,CACvBC,WAAW,CAAEA,WAAY,CACzBK,UAAU,CAAE,CAAApB,OAAO,SAAPA,OAAO,kBAAAD,gBAAA,CAAPC,OAAO,CAAEgB,MAAM,UAAAjB,gBAAA,iBAAfA,gBAAA,CAAiBkB,SAAS,IAAIjB,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEqB,IAAI,CAAC,CACxDf,YAAY,CAAEA,YAAa,CAC5B,CAAC,CACC,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}