{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\reactjs\\\\tailoring-app\\\\src\\\\components\\\\CustomerChatPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerChatPanel({\n  userId,\n  userRoleId,\n  sellerId,\n  sellerName\n}) {\n  _s();\n  const [chat, setChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Find or create chat with this seller\n  useEffect(() => {\n    if (!userId || !sellerId) return;\n    fetch(`http://localhost:8000/api/chat_s/user/${userId}`).then(res => res.json()).then(chats => {\n      let found = chats.find(c => String(c.sender_id) === String(userId) && String(c.receiver_id) === String(sellerId) || String(c.receiver_id) === String(userId) && String(c.sender_id) === String(sellerId));\n      if (found) {\n        setChat(found);\n      } else {\n        // Create new chat if not exists\n        fetch(`http://localhost:8000/api/chat_s`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            sender_id: userId,\n            receiver_id: sellerId,\n            sender_role_id: userRoleId,\n            created_by: userId\n          })\n        }).then(res => res.json()).then(newChat => setChat(newChat));\n      }\n    });\n  }, [userId, sellerId, userRoleId]);\n\n  // Fetch messages for chat\n  useEffect(() => {\n    if (!chat) return;\n    fetch(`http://localhost:8000/api/chat_message_s/${chat.id}`).then(res => res.json()).then(setMessages);\n  }, [chat]);\n\n  // Auto-scroll on new messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Send message\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!messageInput.trim() || !chat) return;\n    const payload = {\n      message: messageInput,\n      sender_id: userId,\n      sender_role_id: userRoleId,\n      receiver_id: sellerId,\n      msg_type: \"text\"\n    };\n    await fetch(`http://localhost:8000/api/chat_message_s/${chat.id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    setMessageInput(\"\");\n    fetch(`http://localhost:8000/api/chat_message_s/${chat.id}`).then(res => res.json()).then(setMessages);\n  };\n  if (!chat) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-6 text-gray-500\",\n    children: \"Loading chat...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col border rounded-lg shadow-lg overflow-hidden h-[400px] mt-8 w-full bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 p-2 font-bold text-green-700\",\n      children: sellerName ? `Chat with ${sellerName}` : \"Chat with Seller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4\",\n      children: [messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 flex ${msg.sender_id === userId ? \"justify-end\" : \"justify-start\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 rounded-lg max-w-xs ${msg.sender_id === userId ? \"bg-green-500 text-white\" : \"bg-gray-200\"}`,\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-center pt-10\",\n        children: \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex border-t bg-gray-50 p-2\",\n      onSubmit: handleSend,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 border rounded p-2 mr-2\",\n        placeholder: \"Type a message...\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-600 text-white px-4 py-2 rounded\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerChatPanel, \"2zAo+SlLHMOrJtA/aSU1J2JZvfQ=\");\n_c = CustomerChatPanel;\nvar _c;\n$RefreshReg$(_c, \"CustomerChatPanel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","CustomerChatPanel","userId","userRoleId","sellerId","sellerName","_s","chat","setChat","messages","setMessages","messageInput","setMessageInput","messagesEndRef","fetch","then","res","json","chats","found","find","c","String","sender_id","receiver_id","method","headers","body","JSON","stringify","sender_role_id","created_by","newChat","id","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","e","preventDefault","trim","payload","message","msg_type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","ref","onSubmit","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/admin/OneDrive/ドキュメント/reactjs/tailoring-app/src/components/CustomerChatPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function CustomerChatPanel({ userId, userRoleId, sellerId, sellerName }) {\r\n  const [chat, setChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Find or create chat with this seller\r\n  useEffect(() => {\r\n    if (!userId || !sellerId) return;\r\n    fetch(`http://localhost:8000/api/chat_s/user/${userId}`)\r\n      .then(res => res.json())\r\n      .then(chats => {\r\n        let found = chats.find(\r\n          c =>\r\n            (String(c.sender_id) === String(userId) && String(c.receiver_id) === String(sellerId)) ||\r\n            (String(c.receiver_id) === String(userId) && String(c.sender_id) === String(sellerId))\r\n        );\r\n        if (found) {\r\n          setChat(found);\r\n        } else {\r\n          // Create new chat if not exists\r\n          fetch(`http://localhost:8000/api/chat_s`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              sender_id: userId,\r\n              receiver_id: sellerId,\r\n              sender_role_id: userRoleId,\r\n              created_by: userId,\r\n            }),\r\n          })\r\n            .then(res => res.json())\r\n            .then(newChat => setChat(newChat));\r\n        }\r\n      });\r\n  }, [userId, sellerId, userRoleId]);\r\n\r\n  // Fetch messages for chat\r\n  useEffect(() => {\r\n    if (!chat) return;\r\n    fetch(`http://localhost:8000/api/chat_message_s/${chat.id}`)\r\n      .then(res => res.json())\r\n      .then(setMessages);\r\n  }, [chat]);\r\n\r\n  // Auto-scroll on new messages\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Send message\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!messageInput.trim() || !chat) return;\r\n    const payload = {\r\n      message: messageInput,\r\n      sender_id: userId,\r\n      sender_role_id: userRoleId,\r\n      receiver_id: sellerId,\r\n      msg_type: \"text\",\r\n    };\r\n    await fetch(`http://localhost:8000/api/chat_message_s/${chat.id}`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    setMessageInput(\"\");\r\n    fetch(`http://localhost:8000/api/chat_message_s/${chat.id}`)\r\n      .then(res => res.json())\r\n      .then(setMessages);\r\n  };\r\n\r\n  if (!chat) return <div className=\"my-6 text-gray-500\">Loading chat...</div>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col border rounded-lg shadow-lg overflow-hidden h-[400px] mt-8 w-full bg-white\">\r\n      <div className=\"bg-green-100 p-2 font-bold text-green-700\">\r\n        {sellerName ? `Chat with ${sellerName}` : \"Chat with Seller\"}\r\n      </div>\r\n      <div className=\"flex-1 overflow-y-auto p-4\">\r\n        {messages.length > 0 ? (\r\n          messages.map(msg => (\r\n            <div\r\n              key={msg.id}\r\n              className={`mb-2 flex ${msg.sender_id === userId ? \"justify-end\" : \"justify-start\"}`}\r\n            >\r\n              <div\r\n                className={`p-2 rounded-lg max-w-xs ${\r\n                  msg.sender_id === userId ? \"bg-green-500 text-white\" : \"bg-gray-200\"\r\n                }`}\r\n              >\r\n                {msg.message}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"text-gray-400 text-center pt-10\">No messages yet.</div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form className=\"flex border-t bg-gray-50 p-2\" onSubmit={handleSend}>\r\n        <input\r\n          className=\"flex-1 border rounded p-2 mr-2\"\r\n          placeholder=\"Type a message...\"\r\n          value={messageInput}\r\n          onChange={e => setMessageInput(e.target.value)}\r\n        />\r\n        <button className=\"bg-green-600 text-white px-4 py-2 rounded\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}